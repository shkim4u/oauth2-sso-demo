applications:
- name: todo
  instances: 1
  memory: 256M
  path: todo-frontend-server/target/todo-frontend-server-0.0.1-SNAPSHOT.jar
  env:
    SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_DEMO_ISSUER_URI: https://authorization.apps.pcfone.io/oauth/token
    SPRING_CLOUD_GATEWAY_ROUTES_0_ID: todo-api
    SPRING_CLOUD_GATEWAY_ROUTES_0_URI: https://todo-api.apps.pcfone.io
    SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0: Path=/todos/**
    SPRING_CLOUD_GATEWAY_ROUTES_0_FILTERS_0: TokenRelay=
    SPRING_RESOURCES_CACHE_CACHECONTROL_MAXAGE: 3d
    SERVER_COMPRESSION_ENABLED: true
    SERVER_COMPRESSION_MINRESPONSESIZE: 1KB
    JAVA_OPTS: -XX:ReservedCodeCacheSize=32M -Xss512k -Duser.timezone=Asia/Tokyo
    JBP_CONFIG_OPEN_JDK_JRE: '{memory_calculator: {stack_threads: 20}, jre: {version: 11.+}}'
    MANAGEMENT_METRICS_TAGS_ORGANIZATION: ${vcap.application.organization_name}
    MANAGEMENT_METRICS_TAGS_SPACE: ${vcap.application.space_name}
    MANAGEMENT_METRICS_TAGS_APPLICATION: ${vcap.application.application_name}
    MANAGEMENT_METRICS_TAGS_INSTANCE_ID: ${management.metrics.tags.application}:${vcap.application.instance_index}
    MANAGEMENT_METRICS_EXPORT_PROMETHEUS_RSOCKET_HOST: ${vcap.services.prometheus-rsocket-proxy.credentials.host}
    MANAGEMENT_METRICS_EXPORT_PROMETHEUS_RSOCKET_PORT: ${vcap.services.prometheus-rsocket-proxy.credentials.port}
    SPRING_ZIPKIN_ENABLED: true
    SPRING_ZIPKIN_BASE_URL: ${vcap.services.zipkin.credentials.url}
    SPRING_ZIPKIN_SERVICE_NAME: ${management.metrics.tags.space}:${vcap.application.application_name}
    LOGGING_EXCEPTION_CONVERSION_WORD: "\t%replace(%replace(%xEx){'\n','@n@'}){'\t','    '}%nopex"
    LOGGING_PATTERN_CONSOLE: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${logging.pattern.level:%5p}) %clr(${PID: }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %replace(%m){'\n','@n@'}${logging.exception-conversion-word:%wEx}%n"
  services:
  - zipkin # cf create-user-provided-service zipkin -p '{"url": "https://zipkin.example.com"}'
  - prometheus-rsocket-proxy # cf create-user-provided-service prometheus-rsocket-proxy -p '{"host": "rsocket.example.com", "port": 7001}'